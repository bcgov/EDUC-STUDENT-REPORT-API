/*
 * *********************************************************************
 *  Copyright (c) 2016, Ministry of Education, BC.
 *
 *  All rights reserved.
 *    This information contained herein may not be used in whole
 *    or in part without the express written consent of the
 *    Government of British Columbia, Canada.
 *
 *  Revision Control Information
 *  File:                TswPSIChoiceEntity.java
 *  Date of Last Commit: $Date::                                               $
 *  Revision Number:     $Rev::                                                $
 *  Last Commit by:      $Author::                                             $
 *
 * ***********************************************************************
 */
package ca.bc.gov.educ.isd.traxadaptor.dao.tsw.impl;

import ca.bc.gov.educ.isd.eis.trax.db.PSIChoice;

import javax.xml.bind.annotation.XmlRootElement;
import java.util.Date;
import java.util.logging.Logger;

import static ca.bc.gov.educ.isd.eis.common.DatabaseConstants.*;

/**
 * An autogenerated class that represents the TSW_PSI_CHOICES_VW view in the
 * database. An embedded composite primary key has been added since this view
 * does not have a unique primary key column.
 *
 * @author CGI Information Management Consultants Inc.
 */
public class TswPSIChoiceEntity implements PSIChoice {

    private static final long serialVersionUID = 1L;
    private static final String CLASSNAME = TswPSIChoiceEntity.class.getName();
    private static final Logger LOG = Logger.getLogger(CLASSNAME);

    protected TswPSIChoiceId tswChoiceId;

    private Character status;

    private Date updateDt;

    private String psiName;

    private String transmissionMode;

    /**
     * Empty constructor that assigns the creation data for the object
     */
    public TswPSIChoiceEntity() {
        this.updateDt = new Date();
    }

    /**
     * Constructor that initializes the object with a given primary key.
     *
     * @param tswChoiceId object that contains the primary key to be used for
     * the new object.
     */
    public TswPSIChoiceEntity(TswPSIChoiceId tswChoiceId) {
        this.tswChoiceId = tswChoiceId;
        this.updateDt = new Date();
    }

    /**
     * Constructor that initializes the object with a primary key using the
     * given parameters.
     *
     * @param studNo Number that identify the student
     * @param psiCode Code that identify the PSI.
     * @param psiYear Year in which the choice was made.
     */
    public TswPSIChoiceEntity(String studNo, String psiCode, String psiYear) {
        this.tswChoiceId = new TswPSIChoiceId(studNo, psiCode, psiYear);
        this.updateDt = new Date();
    }

    /**
     * Constructor that initializes the object with a status and primary key
     * using the given parameters.
     *
     * @param studNo Number that identify the student
     * @param psiCode Code that identify the PSI.
     * @param psiYear Year in which the choice was made.
     * @param status Status of the PSI choice.
     */
    public TswPSIChoiceEntity(String studNo, String psiCode, String psiYear, Character status) {
        this.tswChoiceId = new TswPSIChoiceId(studNo, psiCode, psiYear);
        this.status = status;
        this.updateDt = new Date();
    }

    /**
     * Gets the primary key.
     *
     * @return an object that contains the primary key.
     */
    public TswPSIChoiceId getTswChoiceId() {
        return tswChoiceId;
    }

    /**
     * Sets the primary key.
     *
     * @param tswChoiceId primary key to be assigned.
     */
    public void setTswChoiceId(TswPSIChoiceId tswChoiceId) {
        this.tswChoiceId = tswChoiceId;
    }

    /**
     * Gets the status of the PSI Choice object.
     *
     * @return the status of the PSI Choice object.
     */
    public Character getStatus() {
        return status;
    }

    /**
     * Sets the status of the PSI Choice object
     *
     * @param status the new status of the PSI Choice object.
     */
    public void setStatus(Character status) {
        this.status = status;
    }

    /**
     * Gets the creation/update Date of the object
     *
     * @return the creation date of the object.
     */
    @Override
    public Date getUpdateDt() {
        return updateDt;
    }

    /**
     * Sets the Creation Date of the Object.
     *
     * @param updateDt the new date of the creation/update
     */
    public void setUpdateDt(Date updateDt) {
        this.updateDt = updateDt;
    }

    @Override
    public String getPsiName() {
        return psiName;
    }

    public void setPsiName(String psiName) {
        this.psiName = psiName;
    }

    @Override
    public String getTransmissionMode() {
        return transmissionMode;
    }

    public void setTransmissionMode(String transmissionMode) {
        this.transmissionMode = transmissionMode == null ? "" : transmissionMode.trim();
    }

    @Override
    public String getStudNo() {
        return getTswChoiceId().getStudNo();
    }

    @Override
    public String getPsiCode() {
        return getTswChoiceId().getPsiCode();
    }

    @Override
    public String getPsiYear() {
        return getTswChoiceId().getPsiYear();
    }

    @Override
    public Character getPsiStatus() {
        return getStatus();
    }

    @Override
    public void setPsiStatus(Character psiStatus) {
        setStatus(psiStatus);
    }

    @Override
    public boolean equals(Object object) {
        if (object == null) {
            return false;
        }
        if (!(object instanceof TswPSIChoiceEntity)) {
            return false;
        }
        final TswPSIChoiceEntity other = (TswPSIChoiceEntity) object;
        return this.tswChoiceId.equals(other.tswChoiceId);
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (tswChoiceId != null ? tswChoiceId.hashCode() : 0);
        return hash;
    }
}
